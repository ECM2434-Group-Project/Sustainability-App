import React, { useEffect, useState } from "react";
import { AnswerButton } from "../../components/Quiz/AnswerButton";
import { SubmitButton } from "../../components/Quiz/SubmitButton";
import { NextQuizButton } from "../../components/Quiz/NextQuizButton";

/**
 * the quiz page, shows the user with questions generated by the backend
 * allows the user to answer the questions and submit them to the backend
 * 
 * @returns a quiz page
 */
export default function Quiz() {

    // TODO: Remove with the backend questions, restructure to adapt to the backend
    const [questions, setQuestions] = useState([{
        question: "What is the capital of France?",
        answers: [
            "Paris",
            "London",
            "Berlin",
            "Madrid"
        ]
    },
    {
        question: "How old is Wiktor",
        answers: [
            "18",
            "19",
            "20",
            "21"
        ]
    }])

    // state to keep track of if the user has selected an answer
    const [selected, setSelected] = useState(false)

    // which question is the user on
    const [page, setPage] = useState(0)

    // function to collect the bag after the quiz is complete
    const collectBag = () => {

		// Collect the bag
		console.log("Bag collected")
	}

    // on load, get questions from the backend
    useEffect(() => {

        // some debugging
        console.log("use effect works")

        // fetch the questions from the backend
        fetch("http://localhost:8000/api/questions").then(response => response.json()).then(data => {
            console.log(data)
        }  )
    }, [])

    // return the quiz, selecting first question or second question based on the page state
    return page === 0 ? (
        <div className="flex flex-col items-center pt-20">
                <h1 className="text-2xl font-semibold">Quiz</h1>
                <p>{questions[0] ? questions[0].question : "not yet loaded in"}</p>

                {
                    questions[0] ? (
                        questions[0].answers.map((answer, index) => (
                            <AnswerButton key={index} answer={answer} setSelected={setSelected} />
                        ))
                    ) : (
                        <>not loaded in yet</>
                    )
                }

                {
                    selected ? (
                        <NextQuizButton setPage={setPage}/>
                    ) : (
                        <></>
                    )
                }
        </div>
            
    ) : (
        <div className="flex flex-col items-center pt-20">
                <h1 className="text-2xl font-semibold">Quiz</h1>
                <p>{questions[1] ? questions[1].question : "not yet loaded in"}</p>

                {
                    questions[1] ? (
                        questions[1].answers.map((answer, index) => (
                            <AnswerButton key={index} answer={answer} setSelected={setSelected} />
                        ))
                    ) : (
                        <>not loaded in yet</>
                    )
                }

                {
                    selected ? (
                        <SubmitButton target="/quiz/complete"/>
                    ) : (
                        <></>
                    )
                }
        </div>
    )
}